buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
        gradleDockerVersion = '0.22.1'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}")
    }
}

allprojects {
    group = 'com.sahakian'

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

//    https://plugins.gradle.org/plugin/com.palantir.docker
    apply plugin: 'com.palantir.docker'
    apply plugin: 'com.palantir.docker-run'
    apply plugin: 'com.palantir.docker-compose'
}

docker.name = 'com.sahakian'
bootJar.enabled = false

sourceCompatibility = 12

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

subprojects {
    ext['springCloudVersion'] = 'Greenwich.M3'

    sourceSets.configureEach { sourceSet ->
        tasks.named(sourceSet.compileJavaTaskName, {
            options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/${sourceSet.name}")
        })
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')

        compileOnly('org.projectlombok:lombok')
        annotationProcessor('org.projectlombok:lombok')
    }
}

sourceSets {}

project(':worker-services') {
    bootJar.enabled = false

    task cleanAll {
        dependsOn subprojects*.tasks*.findByName('clean')
    }

    task buildAll {
        dependsOn subprojects*.tasks*.findByName('build')
    }
}

project(':application-services') {
    bootJar.enabled = false

    task cleanAll {
        dependsOn subprojects*.tasks*.findByName('clean')
    }

    task buildAll {
        dependsOn subprojects*.tasks*.findByName('build')
    }

    dockerCompose {
        template 'docker-compose.spring-servers.template.yml'
        dockerComposeFile 'docker-compose.spring-servers.yml'
    }
}

project(':application-services:authentication-service') {
    bootJar.enabled = false

    jar {
        enabled = true
        group 'com.sahakian'
        version = '1.0'
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-security')
        implementation('org.springframework.boot:spring-boot-starter-data-jpa')
        implementation('org.springframework.boot:spring-boot-starter-validation')
        compileOnly('org.projectlombok:lombok')
    }
}

project(':worker-services:configuration-service') {
    bootJar.enabled = false

    jar {
        enabled = true
        group 'com.sahakian'
        version = '1.0'
    }

    dependencies {
        implementation "org.springframework.cloud:spring-cloud-config-server"
        implementation "org.springframework.boot:spring-boot-starter-security"
        implementation "org.springframework.boot:spring-boot-starter-actuator"
    }
}

project(':worker-services:monitoring-service') {
    bootJar.enabled = false

    jar {
        enabled = true
        group 'com.sahakian'
        version = '1.0'
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation "org.springframework.cloud:spring-cloud-starter-config"
        implementation "org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard"
        testCompile "org.springframework.boot:spring-boot-starter-test"
    }
}

project(':worker-services:registry-service') {
    bootJar.enabled = false

    jar {
        enabled = true
        group 'com.sahakian'
        version = '1.0'
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server"
        implementation "org.springframework.cloud:spring-cloud-starter-config"
     
//        Java 12 support
        compile "com.sun.xml.bind:jaxb-core:2.3.0.1"
        compile "javax.xml.bind:jaxb-api:2.3.1"
        compile "com.sun.xml.bind:jaxb-impl:2.3.1"
    }
}

project(':worker-services:gateway') {
    bootJar.enabled = false

    jar {
        enabled = true
        group 'com.sahakian'
        version = '1.0'
    }

    dependencies {
        dependencies {
            implementation "org.springframework.boot:spring-boot-starter-actuator"
            implementation "org.springframework.cloud:spring-cloud-starter-netflix-zuul"
            implementation "org.springframework.cloud:spring-cloud-starter-config"
            implementation "org.springframework.cloud:spring-cloud-starter"
            implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
            implementation "org.springframework.cloud:spring-cloud-starter-sleuth"
        }
    }
}